<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="sample.project.jobissue.repository.mybatis.PreRecruitmentMapper">



	<!-- 공고 상세 정보 -->
	<resultMap type="PreRecruitment" id="preRecruitmentMap">
		<id property="announcementCode" column="ANNOUNCEMENT_CODE"></id>
		<result property="corName" column="cor_name"></result>
		<result property="announcement" column="announcement"></result>
		<result property="recruitField" column="RECRUIT_FIELD"></result>
		<result property="salary" column="salary"></result> <!-- // -->
		<result property="career" column="career"></result>
		<result property="recruitPerson" column="RECRUIT_PERSON"></result>
		<result property="receiptStartDate" column="receipt_start"></result>
		<result property="receiptEndDate" column="receipt_end"></result>
		<result property="recruitWriteDate" column="Recruit_writeDate"></result>
		<!-- 다른 테이블 연동해서 가져와야 하므로... id를 가지고(select where절에 필요(매개변수)) 실행할 select문은 
			작성한 id="selectFoodItemOptions"이므로... -->
		<collection property="employType"
			column="ANNOUNCEMENT_CODE" select="selectPreEmployType"></collection>
		<collection property="workingArea"
			column="ANNOUNCEMENT_CODE" select="selectPreWorkingArea"></collection>
		<collection property="academicRecord"
			column="ANNOUNCEMENT_CODE" select="selectPreAcademicRecord"></collection>
		<collection property="employType"
			column="ANNOUNCEMENT_CODE" select="selectEmployType"></collection>
		<collection property="workingArea"
			column="ANNOUNCEMENT_CODE" select="selectWorkingArea"></collection>
		<collection property="academicRecord"
			column="ANNOUNCEMENT_CODE" select="selectAcademicRecord"></collection>
	</resultMap>

	<!-- 공고 임시 테이블 삽입 -->
	<insert id="insertPreRecruit" parameterType="PreRecruitment">
		<selectKey keyProperty="announcementCode"
			resultType="java.lang.Integer" order="BEFORE">
			select
			ANNOUNCEMENT_CODE_SEQ.nextVal as announcementCode
			from dual
		</selectKey>
		insert into preAppRecru
		values
		(#{corCode},#{announcementCode},#{announcement},
		#{recruitFieldCode},#{salary},#{careerCode},#{recruitPerson}
		,SYSDATE,(SYSDATE+#{endDate}),SYSDATE,'00')
	</insert>

	<!--임시 채용 상세 정보 -->
	<select id="selectByPreAnnCode" resultMap="preRecruitmentMap">
		SELECT
		par.Announcement_Code, par.Announcement, par.SALARY,
		par.RECRUIT_PERSON, par.RECEIPT_START, par.RECEIPT_END,
		par.Recruit_writeDate,par.cor_code,cor.cor_name, rfc.RECRUIT_FIELD,
		c.Career, asu.applyStat
		FROM preAppRecru par, corporation_info cor,RecruitFieldCode rfc,
		CareerCode c , applyStatCode asu
		WHERE par.Announcement_Code = #{annCode}
		AND par.cor_code = cor.cor_code
		AND par.RECRUIT_FIELD_Code = rfc.RECRUIT_FIELD_Code
		AND par.career_code =c.career_code
		AND par.applyStatus = asu.applyStat_Code
	</select>

	<!-- 승인된 채용 상세 정보 -->
	<select id="selectByAnnCode" resultMap="preRecruitmentMap">
		SELECT
		rm.Announcement_Code, rm.Announcement, rm.SALARY, rm.RECRUIT_PERSON,
		rm.RECEIPT_START, rm.RECEIPT_END, rm.Recruit_writeDate,rm.cor_code,
		cor.cor_name, rfc.RECRUIT_FIELD, c.Career, asu.applyStat
		FROM
		recruitment rm, corporation_info cor,RecruitFieldCode rfc,
		CareerCode c , applyStatCode asu
		WHERE rm.Announcement_Code = #{annCode}
		AND
		rm.cor_code = cor.cor_code
		AND rm.RECRUIT_FIELD_Code = rfc.RECRUIT_FIELD_Code
		AND rm.career_code =c.career_code
		AND rm.applyStatus = asu.applyStat_Code
	</select>

<!-- 임시 공고 용 -->
	<select id="selectPreEmployType" resultType="String">
		SELECT
		NVL(et.employtype, '')
		FROM premultiEmp pme, EmployTypeCode et
		WHERE
		pme.ANNOUNCEMENT_CODE = #{annCode}
		AND pme.EmployType_Code =
		et.EmployType_Code
	</select>

	<select id="selectPreWorkingArea" resultType="String">
		SELECT
		NVL(wa.WORKING_AREA, '')
		FROM premultiWorkArea pmw, WorkingAreaCode wa
		WHERE pmw.ANNOUNCEMENT_CODE = #{annCode}
		AND pmw.WORKING_AREA_CODE =
		wa.WORKING_AREA_CODE
	</select>

	<select id="selectPreAcademicRecord" resultType="String">
		select
		NVL(arc.ACADEMIC_RECORD, '')
		from premultiAcaReco pma,
		AcademicRecordCode arc
		where pma.ANNOUNCEMENT_CODE = #{annCode}
		and
		pma.ACADEMIC_RECORD_CODE = arc.ACADEMIC_RECORD_CODE
	</select>
	
<!-- 	승인된 공고 용 -->
		<select id="selectEmployType" resultType="String">
		SELECT
		NVL(et.employtype, '')
		FROM multiEmp me, EmployTypeCode et
		WHERE
		me.ANNOUNCEMENT_CODE = #{annCode}
		AND me.EmployType_Code = et.EmployType_Code
	</select>

	<select id="selectWorkingArea" resultType="String">
		SELECT
		NVL(wa.WORKING_AREA, '')
		FROM multiWorkArea mw, WorkingAreaCode wa
		WHERE mw.ANNOUNCEMENT_CODE = #{annCode}
		AND mw.WORKING_AREA_CODE = wa.WORKING_AREA_CODE
	</select>

	<select id="selectAcademicRecord" resultType="String">
		select
		NVL(arc.ACADEMIC_RECORD, '')
		from multiAcaReco ma,
		AcademicRecordCode arc
		where ma.ANNOUNCEMENT_CODE = #{annCode}
		and ma.ACADEMIC_RECORD_CODE = arc.ACADEMIC_RECORD_CODE
	</select>

	<!-- 공고 관리 페이지 임시 공고 목록 표기용 -->
	<select id="selectByPreCorCode" resultMap="preRecruitmentMap">
		select
		asu.applyStat,cor_Code, announcement_Code, announcement,
		receipt_Start,
		receipt_End
		from preAppRecru par , applyStatCode asu
		where cor_Code=#{corCode}
		AND par.applyStatus = asu.applyStat_Code
	</select>

	<!-- 고용형태 등록 -->
	<insert id="insertPreMulEmp" parameterType="PreRecruitment">
		<foreach collection="empOptions" item="item" open="INSERT ALL"
			close="SELECT * FROM DUAL" separator=" ">
			INTO PreMultiEmp
			VALUES(#{announcementCode}, #{item})
		</foreach>
	</insert>

	<!-- 근무지역 등록 -->
	<insert id="insertPreMulWork" parameterType="PreRecruitment">
		<foreach collection="workOptions" item="item"
			open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">
			INTO
			PreMultiWorkArea
			VALUES(#{announcementCode}, #{item})
		</foreach>
	</insert>

	<!-- 학력코드 등록 -->
	<insert id="insertPreMulAca" parameterType="PreRecruitment">
		<foreach collection="acaOptions" item="item" open="INSERT ALL"
			close="SELECT * FROM DUAL" separator=" ">
			INTO preMultiAcaReco
			VALUES(#{announcementCode}, #{item})
		</foreach>
	</insert>

	<delete id="deleteAll">
		delete from preAppRecru
	</delete>

	<delete id="deleteByAnnouncementCode">
		delete from preAppRecru
		where
		announcement_Code=#{announcementCode}
	</delete>

	<update id="update">
		update preAppRecru
		SET
		announcement =
		#{updateItem.announcement},
		recruit_field_code=#{updateItem.recruitFieldCode}
		employType_Code =
		#{updateItem.employTypeCode},
		salary = #{updateItem.salary},
		career_Code = #{updateItem.careerCode},
		recruit_Person =
		#{updateItem.recruitPerson},
		receipt_Start = SYSDATE,
		receipt_End =
		SYSDATE+#{updateItem.endDate}
		Where
		announcement_code =
		#{announcementCode}
	</update>

	<!-- 업데이트를 위한 삭제 -->
	<delete id="deletePreMulEmp">
		delete from preMultiEmp
		where announcement_code =
		#{announcementCode}
	</delete>

	<delete id="deletePreMulAca">
		delete from preMultiAcareco
		where announcement_code =
		#{announcementCode}
	</delete>

	<delete id="deletePreMulWork">
		delete from preMultiWorkarea
		where announcement_code =
		#{announcementCode}
	</delete>


	<!-- 지원자 부분 resultmap -->
	<resultMap type="ApplicantInfo" id="applicantInfo">
		<result property="applyStatus" column="applyStatus"></result>
		<result property="ResumeTitle" column="Resume_Title"></result>
		<result property="RecruitField" column="RECRUIT_FIELD"></result>
		<result property="Career" column="career"></result>
		<result property="UserResumeEmail" column="user_resumeEmail"></result>
		<result property="MilitaryStatus" column="military_status"></result>
		<result property="MaritalStatus" column="marital_status"></result>
		<result property="CoverLetter" column="cover_letter"></result>
		<result property="License" column="license"></result>
		<result property="Activity" column="activity"></result>
		<result property="Portfolio" column="portfolio"></result>
		<result property="submitDate" column="submit_date"></result>
		<collection property="EmployType" column="User_CODE"
			select="selectEmployTypeByUserResume"></collection>
		<collection property="AcademicRecord" column="User_CODE"
			select="selectAcademicRecordByUserResume"></collection>

	</resultMap>


	<!-- 지원자 관리 페이지 공고 표기용 -->
	<select id="selectByCorCode" resultType="ApplicantManage">
		select
		asu.applyStat ,
		cor_Code,announcement_Code, announcement,
		receipt_Start,receipt_End
		from recruitment re , applyStatCode asu
		where re.cor_code= #{corCode}
		AND re.applyStatus = asu.applyStat_Code
		ORDER BY re.announcement_Code DESC
	</select>

	<!-- 제출된 이력서 표기 -->
	<select id="userSelectByAnnCode" resultMap="applicantInfo">
		select sr.user_code,
		sr.announcement_code, sr.user_resumeEmail, sr.military_status,
		sr.marital_status,
		sr.employType_code,
		sr.recruit_field_code,rfc.recruit_field, sr.resume_title,
		sr.academic_record_code,
		sr.career_code,c.career, sr.cover_letter,
		sr.license, sr.activity,
		sr.portfolio, sr.submit_date
		from SubmitResume
		sr, RecruitFieldCode rfc, CareerCode c
		where announcement_Code
		=#{announcementCode}
		AND sr.career_code = c.career_code
		AND
		sr.RECRUIT_FIELD_Code = rfc.RECRUIT_FIELD_Code
	</select>

	<!-- 지원자 목록 표기 -->
	<select id="selectByAnnSubmit" resultType="ApplicantInfo">
		select ui.User_Name,
		ui.User_Gender, ui.User_Birth,
		sr.resume_title, sr.user_Code,
		sr.announcement_code,sr.submit_date
		from User_INFO ui, SubmitResume sr
		where
		ui.user_code = sr.user_Code
		AND sr.Announcement_Code =
		#{announcementCode}
	</select>

	<!-- submitresume -->
	<select id="selectEmployTypeByUserResume" resultType="String">
		SELECT
		NVL(et.employtype, '')
		FROM submitResume sr, EmployTypeCode et
		WHERE
		sr.user_Code = #{userCode}
		AND sr.EmployType_Code =et.EmployType_Code
	</select>

	<select id="selectAcademicRecordByUserResume"
		resultType="String">
		select
		NVL(arc.ACADEMIC_RECORD, '')
		from submitResume
		sr,AcademicRecordCode arc
		where sr.user_Code = #{userCode}
		and
		sr.ACADEMIC_RECORD_CODE = arc.ACADEMIC_RECORD_CODE
	</select>



</mapper>