<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="sample.project.jobissue.repository.mybatis.ResumeMapper">
	
	<insert id="insertResume" parameterType="ResumeItem" >
		insert into RESUME
		(
			USER_CODE,
			User_ResumeEmail,
			Military_Status,
			Marital_Status,
		 	EmployType_Code,
		 	Recruit_Field_Code,
		 	Resume_title,
		 	Academic_record_Code,
			Career_Code,
			Cover_letter,
			License,
			Activity, 
			Portfolio,
			Reading_Code,
			RESUME_DATE
		)
		
		values
		(
			(select USER_CODE from USER_INFO where user_code = #{userCode}),
			#{UserResumeEmail},
			#{MilitaryStatus},
			#{MaritalStatus},
			(select employtype_code from EmployTypeCode where EmployType_Code = #{EmployTypeCode}),
			(select Recruit_Field_code from RecruitFieldCode where Recruit_Field_Code = #{RecruitFieldCode}),
			#{ResumeTitle},
			(select Academic_Record_code from AcademicRecordCode where Academic_Record_Code = #{AcademicRecordCode}),  
			(select Career_code from CareerCode where Career_Code = #{CareerCode}),
			#{CoverLetter},
			#{License},
			#{Activity},  
			#{Portfolio},
			#{ReadingCode},
			sysdate
		)
		
	</insert>
	
	<select id="selectByUserCode" resultType="ResumeItem">
	select *
	FROM RESUME
	where USER_CODE = (select USER_CODE from USER_INFO where user_code = #{userCode})
	</select>
		
	<select id="selectBySubmit" resultType="JobItem">
	select ci.COR_CODE, re.Announcement_Code, ci.COR_NAME , re.Announcement, re.SALARY
	from CORPORATION_INFO ci, Recruitment re, SubmitResume sr
	where 
	re.cor_code = sr.cor_code and
	ci.cor_code = sr.cor_code and
	re.Announcement_Code = sr.Announcement_Code and
	sr.user_code = #{userCode}
	</select>	
		
		<!-- 고용형태 등록 -->
	<insert id="insertMulEmp" parameterType="JobItem">
		<foreach collection="empOptions" item="item" open="INSERT ALL"
			close="SELECT * FROM DUAL" separator=" ">
			INTO multiEmp
			VALUES(#{announcementCode}, #{item})
		</foreach>
	</insert>
	
	<!-- 근무지역 등록 -->
	<insert id="insertMulWork" parameterType="JobItem">
		<foreach collection="workOptions" item="item" open="INSERT ALL"
			close="SELECT * FROM DUAL" separator=" ">
			INTO multiWorkArea
			VALUES(#{announcementCode}, #{item})
		</foreach>
	</insert>
	
	<!-- 학력코드 등록 -->
	<insert id="insertMulAca" parameterType="JobItem">
		<foreach collection="acaOptions" item="item" open="INSERT ALL"
			close="SELECT * FROM DUAL" separator=" ">
			INTO multiAcaReco
			VALUES(#{announcementCode}, #{item})
		</foreach>
	</insert>
	
	<resultMap type="JobItem" id="jobItemMap">
	<id property="announcementCode" column="ANNOUNCEMENT_CODE"></id>
	<result property="corName" column="cor_name"></result>
	<result property="corCode" column="cor_Code"></result>
	<result property="announcement" column="announcement"></result>
	<result property="recruitField" column="RECRUIT_FIELD"></result>
	<result property="salary" column="salary"></result> <!-- // -->
	<result property="career" column="career"></result>
	<result property="recruitPerson" column="RECRUIT_PERSON"></result>
	<result property="receiptStartDate" column="receipt_start"></result>
	<result property="receiptEndDate" column="receipt_end"></result>
	<!-- 다른 테이블 연동해서 가져와야 하므로... id를 가지고(select where절에 필요(매개변수)) 실행할 select문은 
		작성한 id="selectFoodItemOptions"이므로... -->
	<collection property="employType" column="ANNOUNCEMENT_CODE"
		select="selectEmployType"></collection>
	<collection property="workingArea" column="ANNOUNCEMENT_CODE"
		select="selectWorkingArea"></collection>
	<collection property="academicRecord" column="ANNOUNCEMENT_CODE"
		select="selectAcademicRecord"></collection>
	</resultMap>
	
	<!-- 다른 케이스 살펴보기 -->
	<select id="selectByAnnCode" resultMap="jobItemMap">
		select re.ANNOUNCEMENT_CODE, cor.cor_code, cor.cor_name, re.announcement, ref.RECRUIT_FIELD,
		re.salary, c.career career, re.RECRUIT_PERSON,
		re.receipt_start, re.receipt_end
		FROM CORPORATION_INFO cor, Recruitment re, RecruitFieldCode ref, CareerCode c
		where re.Announcement_Code = #{submitListAnnCode}
		and re.cor_code = cor.cor_code
		and re.RECRUIT_FIELD_Code = ref.RECRUIT_FIELD_CODE
		and re.Career_Code = c.Career_Code
	</select>

	<select id="selectEmployType" resultType="String">
		select NVL(et.employtype, '') 
		from multiEmp me, EmployTypeCode et
		where ANNOUNCEMENT_CODE = #{submitListAnnCode}
		and me.EMPLOYTYPE_CODE = et.EMPLOYTYPE_CODE
	</select>
	
	<select id="selectWorkingArea" resultType="String">
		select wa.WORKING_AREA
		from multiWorkArea mw, WorkingAreaCode wa
		where ANNOUNCEMENT_CODE = #{submitListAnnCode}
		and mw.WORKING_AREA_CODE = wa.WORKING_AREA_CODE
	</select>
	
	<select id="selectAcademicRecord" resultType="String">
		select arc.ACADEMIC_RECORD
		from multiAcaReco mar, AcademicRecordCode arc
		where ANNOUNCEMENT_CODE = #{submitListAnnCode}
		and mar.ACADEMIC_RECORD_CODE = arc.ACADEMIC_RECORD_CODE
	</select>
		
	<update id="update">
		update RESUME
		SET 
		Resume_title = #{updateItem.ResumeTitle} ,
		User_ResumeEmail = #{updateItem.UserResumeEmail} ,
		EmployType_Code = #{updateItem.EmployTypeCode} ,
		Recruit_Field_Code = #{updateItem.RecruitFieldCode} ,
		Academic_record_Code = #{updateItem.AcademicRecordCode} ,
		Career_Code = #{updateItem.CareerCode} ,
		Military_Status = #{updateItem.MilitaryStatus} ,
		Marital_Status = #{updateItem.MaritalStatus} ,
		License = #{updateItem.License} ,
		Activity = #{updateItem.Activity} ,
		Portfolio = #{updateItem.Portfolio} ,
		Cover_letter = #{updateItem.CoverLetter} ,
		Reading_Code = #{updateItem.ReadingCode}, 
		RESUME_DATE = sysdate
		WHERE USER_CODE = (select USER_CODE from USER_INFO where user_code = #{userCode})
	</update>
	
	<delete id="deleteResume">
		delete 
		from RESUME 
		where USER_CODE = (select USER_CODE from USER_INFO where user_code = #{userCode})
	</delete>
	
	<delete id="deleteSubmitResume">
		delete from SubmitResume
		where user_code = #{userCode}
		and Announcement_Code = #{submitListAnnCode}
	</delete>


	<update id="insertAfter">
		update USER_INFO
		set
		resume_code = 'Y'

		where USER_CODE = (select USER_CODE from USER_INFO where user_code = #{userCode})
	</update>
	
		<update id="deleteAfter">
		update USER_INFO
		set
		resume_code = 'N'

		where USER_CODE = (select USER_CODE from USER_INFO where user_code = #{userCode})
	</update>
</mapper>